// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CreateVault extends ethereum.Event {
  get params(): CreateVault__Params {
    return new CreateVault__Params(this);
  }
}

export class CreateVault__Params {
  _event: CreateVault;

  constructor(event: CreateVault) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get vaultId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get coll(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get dri(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get cri(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class DecreaseVaultColl extends ethereum.Event {
  get params(): DecreaseVaultColl__Params {
    return new DecreaseVaultColl__Params(this);
  }
}

export class DecreaseVaultColl__Params {
  _event: DecreaseVaultColl;

  constructor(event: DecreaseVaultColl) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get vaultId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get coll(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get dri(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get cri(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class DecreaseVaultDebt extends ethereum.Event {
  get params(): DecreaseVaultDebt__Params {
    return new DecreaseVaultDebt__Params(this);
  }
}

export class DecreaseVaultDebt__Params {
  _event: DecreaseVaultDebt;

  constructor(event: DecreaseVaultDebt) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get vaultId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get debt(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get dri(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get cri(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class IncreaseVaultColl extends ethereum.Event {
  get params(): IncreaseVaultColl__Params {
    return new IncreaseVaultColl__Params(this);
  }
}

export class IncreaseVaultColl__Params {
  _event: IncreaseVaultColl;

  constructor(event: IncreaseVaultColl) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get vaultId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get coll(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get dri(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get cri(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class IncreaseVaultDebt extends ethereum.Event {
  get params(): IncreaseVaultDebt__Params {
    return new IncreaseVaultDebt__Params(this);
  }
}

export class IncreaseVaultDebt__Params {
  _event: IncreaseVaultDebt;

  constructor(event: IncreaseVaultDebt) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get vaultId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get debt(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get dri(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get cri(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Liquidate extends ethereum.Event {
  get params(): Liquidate__Params {
    return new Liquidate__Params(this);
  }
}

export class Liquidate__Params {
  _event: Liquidate;

  constructor(event: Liquidate) {
    this._event = event;
  }

  get liquidator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get vaultId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Redeem extends ethereum.Event {
  get params(): Redeem__Params {
    return new Redeem__Params(this);
  }
}

export class Redeem__Params {
  _event: Redeem;

  constructor(event: Redeem) {
    this._event = event;
  }

  get redeemer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get debt(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get coll(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class VaultManager__minimumCollRatioResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getRatio(): BigInt {
    return this.value0;
  }

  getDRatio(): BigInt {
    return this.value1;
  }

  getLastUpdate(): BigInt {
    return this.value2;
  }
}

export class VaultManager__rebaseIndicesResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getDebtRebaseIndex(): BigInt {
    return this.value0;
  }

  getCollRebaseIndex(): BigInt {
    return this.value1;
  }

  getLastUpdate(): BigInt {
    return this.value2;
  }
}

export class VaultManager__vaultsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: boolean;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    return map;
  }

  getDebt(): BigInt {
    return this.value0;
  }

  getCollateral(): BigInt {
    return this.value1;
  }

  getLastDebtRebaseIndex(): BigInt {
    return this.value2;
  }

  getLastCollRebaseIndex(): BigInt {
    return this.value3;
  }

  getIsActive(): boolean {
    return this.value4;
  }
}

export class VaultManager extends ethereum.SmartContract {
  static bind(address: Address): VaultManager {
    return new VaultManager("VaultManager", address);
  }

  collLocked(): BigInt {
    let result = super.call("collLocked", "collLocked():(uint256)", []);

    return result[0].toBigInt();
  }

  try_collLocked(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("collLocked", "collLocked():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  lastVaultId(): BigInt {
    let result = super.call("lastVaultId", "lastVaultId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_lastVaultId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("lastVaultId", "lastVaultId():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minimumCollRatio(): VaultManager__minimumCollRatioResult {
    let result = super.call(
      "minimumCollRatio",
      "minimumCollRatio():(uint96,uint96,uint64)",
      []
    );

    return new VaultManager__minimumCollRatioResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_minimumCollRatio(): ethereum.CallResult<
    VaultManager__minimumCollRatioResult
  > {
    let result = super.tryCall(
      "minimumCollRatio",
      "minimumCollRatio():(uint96,uint96,uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new VaultManager__minimumCollRatioResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  rebaseIndices(): VaultManager__rebaseIndicesResult {
    let result = super.call(
      "rebaseIndices",
      "rebaseIndices():(uint128,uint128,uint256)",
      []
    );

    return new VaultManager__rebaseIndicesResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_rebaseIndices(): ethereum.CallResult<VaultManager__rebaseIndicesResult> {
    let result = super.tryCall(
      "rebaseIndices",
      "rebaseIndices():(uint128,uint128,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new VaultManager__rebaseIndicesResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  vaults(param0: Bytes): VaultManager__vaultsResult {
    let result = super.call(
      "vaults",
      "vaults(bytes32):(uint128,uint128,uint128,uint128,bool)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return new VaultManager__vaultsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBoolean()
    );
  }

  try_vaults(param0: Bytes): ethereum.CallResult<VaultManager__vaultsResult> {
    let result = super.tryCall(
      "vaults",
      "vaults(bytes32):(uint128,uint128,uint128,uint128,bool)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new VaultManager__vaultsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBoolean()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateVaultCall extends ethereum.Call {
  get inputs(): CreateVaultCall__Inputs {
    return new CreateVaultCall__Inputs(this);
  }

  get outputs(): CreateVaultCall__Outputs {
    return new CreateVaultCall__Outputs(this);
  }
}

export class CreateVaultCall__Inputs {
  _call: CreateVaultCall;

  constructor(call: CreateVaultCall) {
    this._call = call;
  }

  get initialColl(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CreateVaultCall__Outputs {
  _call: CreateVaultCall;

  constructor(call: CreateVaultCall) {
    this._call = call;
  }
}

export class DecreaseVaultCollCall extends ethereum.Call {
  get inputs(): DecreaseVaultCollCall__Inputs {
    return new DecreaseVaultCollCall__Inputs(this);
  }

  get outputs(): DecreaseVaultCollCall__Outputs {
    return new DecreaseVaultCollCall__Outputs(this);
  }
}

export class DecreaseVaultCollCall__Inputs {
  _call: DecreaseVaultCollCall;

  constructor(call: DecreaseVaultCollCall) {
    this._call = call;
  }

  get vaultId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get collDecrease(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DecreaseVaultCollCall__Outputs {
  _call: DecreaseVaultCollCall;

  constructor(call: DecreaseVaultCollCall) {
    this._call = call;
  }
}

export class DecreaseVaultDebtCall extends ethereum.Call {
  get inputs(): DecreaseVaultDebtCall__Inputs {
    return new DecreaseVaultDebtCall__Inputs(this);
  }

  get outputs(): DecreaseVaultDebtCall__Outputs {
    return new DecreaseVaultDebtCall__Outputs(this);
  }
}

export class DecreaseVaultDebtCall__Inputs {
  _call: DecreaseVaultDebtCall;

  constructor(call: DecreaseVaultDebtCall) {
    this._call = call;
  }

  get vaultId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get debtDecrease(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DecreaseVaultDebtCall__Outputs {
  _call: DecreaseVaultDebtCall;

  constructor(call: DecreaseVaultDebtCall) {
    this._call = call;
  }
}

export class IncreaseVaultCollCall extends ethereum.Call {
  get inputs(): IncreaseVaultCollCall__Inputs {
    return new IncreaseVaultCollCall__Inputs(this);
  }

  get outputs(): IncreaseVaultCollCall__Outputs {
    return new IncreaseVaultCollCall__Outputs(this);
  }
}

export class IncreaseVaultCollCall__Inputs {
  _call: IncreaseVaultCollCall;

  constructor(call: IncreaseVaultCollCall) {
    this._call = call;
  }

  get vaultId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get collIncrease(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class IncreaseVaultCollCall__Outputs {
  _call: IncreaseVaultCollCall;

  constructor(call: IncreaseVaultCollCall) {
    this._call = call;
  }
}

export class IncreaseVaultDebtCall extends ethereum.Call {
  get inputs(): IncreaseVaultDebtCall__Inputs {
    return new IncreaseVaultDebtCall__Inputs(this);
  }

  get outputs(): IncreaseVaultDebtCall__Outputs {
    return new IncreaseVaultDebtCall__Outputs(this);
  }
}

export class IncreaseVaultDebtCall__Inputs {
  _call: IncreaseVaultDebtCall;

  constructor(call: IncreaseVaultDebtCall) {
    this._call = call;
  }

  get vaultId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get debtIncrease(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class IncreaseVaultDebtCall__Outputs {
  _call: IncreaseVaultDebtCall;

  constructor(call: IncreaseVaultDebtCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _pricefeed(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class LiquidateCall extends ethereum.Call {
  get inputs(): LiquidateCall__Inputs {
    return new LiquidateCall__Inputs(this);
  }

  get outputs(): LiquidateCall__Outputs {
    return new LiquidateCall__Outputs(this);
  }
}

export class LiquidateCall__Inputs {
  _call: LiquidateCall;

  constructor(call: LiquidateCall) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get vaultId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class LiquidateCall__Outputs {
  _call: LiquidateCall;

  constructor(call: LiquidateCall) {
    this._call = call;
  }
}

export class RedeemCall extends ethereum.Call {
  get inputs(): RedeemCall__Inputs {
    return new RedeemCall__Inputs(this);
  }

  get outputs(): RedeemCall__Outputs {
    return new RedeemCall__Outputs(this);
  }
}

export class RedeemCall__Inputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }

  get debtToRedeem(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RedeemCall__Outputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }
}
